name: build-procursus-debs

on:
  workflow_dispatch:
    inputs:
      cfVer:
        description: 'Core Foundation Version'
        required: true
        type: number

defaults:
  run:
    shell: bash

env:
  MEMO_TARGET: iphoneos-arm64

jobs:
  package:
    runs-on: macos-latest
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        package: [ ldid, libplist ]
    steps:
      - name: Download zstd
        id: download-zstd
        run: |
          dir=$(mktemp -d /tmp/XXXX) && cd "${dir}"
          curl -LO https://cameronkatri.com/zstd
          chmod +x ./zstd
          echo "DIR=${dir}" >> $GITHUB_OUTPUT

      - name: Boostrap Procursus
        run: |
          dir="${{ steps.download-zstd.outputs.DIR }}" && cd "${dir}"
          curl -L https://apt.procurs.us/bootstrap_darwin-amd64.tar.zst -o bootstrap.tar.zst
          ./zstd -dk bootstrap.tar.zst
          sudo tar -xvpkf ./bootstrap.tar -C / || :
          cd -
          rm -vrf "${dir}"

      - name: Add Procusus to PATH
        run: |
          PROCURSUS_PATHS=("/opt/procursus/games" "/opt/procursus/sbin" "/opt/procursus/bin" "/opt/procursus/local/sbin" "/opt/procursus/local/bin")
          for i in "${PROCURSUS_PATHS[@]}";
          do
            case ":$PATH:" in
              *:$i:*) echo "$i is already in PATH, not adding";;
              *) echo "$i" >> $GITHUB_PATH;;
            esac
          done

          case ":$CPATH:" in
            *:/opt/procursus/include:*) echo "/opt/procursus/include already in CPATH, not adding";;
            *) echo "CPATH=$CPATH:/opt/procursus/include" >> $GITHUB_ENV;;
          esac

          case ":$LIBRARY_PATH:" in
            *:/opt/procursus/lib:*) echo "/opt/procursus/lib already in LIBRARY_PATH, not adding";;
            *) echo "LIBRARY_PATH=$LIBRARY_PATH:/opt/procursus/lib" >> $GITHUB_ENV;;
          esac

      - name: Create unprivileged user for APT method
        run: |
          # Taken from Procursus' apt.postinst
          set -e
          getHiddenUserUid()
          {
            local __UIDS=$(dscl . -list /Users UniqueID | awk '{print $2}' | sort -ugr)
            local __NewUID
            for __NewUID in $__UIDS
            do
                if [[ $__NewUID -lt 499 ]] ; then
                    break;
                fi
            done
            echo $((__NewUID+1))
          }

          if ! id _apt &>/dev/null; then
            # add unprivileged user for the apt methods
            sudo dscl . -create /Users/_apt UserShell /usr/bin/false
            sudo dscl . -create /Users/_apt NSFHomeDirectory /var/empty
            sudo dscl . -create /Users/_apt PrimaryGroupID -1
            sudo dscl . -create /Users/_apt UniqueID $(getHiddenUserUid)
            sudo dscl . -create /Users/_apt RealName "APT Sandbox User"
          else
            echo "APT Sandbox User already exists, not creating"
          fi

      - name: Update bootstrap
        run: |
          sudo apt-get -y update
          sudo apt-get -y --allow-downgrades dist-upgrade || :

      - name: Install necessary packages on macOS
        run: |
          sudo apt-get install -y autoconf automake autopoint bash bison cmake curl docbook-xml \
            docbook-xsl fakeroot findutils flex gawk git gnupg grep groff gzip ldid libtool make \
            ncurses-bin openssl patch pkg-config po4a python3 sed tar triehash xz-utils asciidoc zstd


      - name: Cache Procursus repo
        uses: actions/cache@v3
        id: cache
        with:
          path: Procursus
          key: procursus-${{ inputs.cfVer }}-${{ matrix.package }}
          restore-keys: |
            procursus-${{ inputs.cfVer }}-

      - name: "Check Procursus existence"
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: "$GITHUB_WORKSPACE/Procursus/"

      - name: Checkout Procursus
        if: steps.check_files.outputs.files_exists != 'true'
        uses: actions/checkout@v3
        with:
          repository: 'lorenzoferron98/Procursus'
          path: 'Procursus'

      - name: Build ${{ matrix.package }}
        if: ${{ success() || failure() }}
        working-directory: Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ inputs.cfVer }} NO_PGP=1 gmake ${{ matrix.package }}-package