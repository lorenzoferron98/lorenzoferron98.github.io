name: build-procursus-debs
on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  bootstrap-repo:
    runs-on: macos-latest
    env:
      MEMO_TARGET: iphoneos-arm64
    strategy:
      matrix:
        cfver: [1800]
    steps:
      - name: Download zstd
        id: download-zstd
        run: |
          dir=$(mktemp -d /tmp/XXXX) && cd "${dir}"
          curl -LO https://cameronkatri.com/zstd
          chmod +x ./zstd
          echo "DIR=${dir}" >> $GITHUB_OUTPUT

      - name: Boostrap Procursus
        run: |
          dir="${{ steps.download-zstd.outputs.DIR }}" && cd "${dir}"
          curl -L https://apt.procurs.us/bootstrap_darwin-amd64.tar.zst -o bootstrap.tar.zst
          ./zstd -dk bootstrap.tar.zst
          sudo tar -xvpkf ./bootstrap.tar -C / || :
          cd -
          rm -vrf "${dir}"

      - name: Add Procusus to PATH
        run: |
          PROCURSUS_PATHS=("/opt/procursus/games" "/opt/procursus/sbin" "/opt/procursus/bin" "/opt/procursus/local/sbin" "/opt/procursus/local/bin")
          for i in "${PROCURSUS_PATHS[@]}";
          do
            case ":$PATH:" in
              *:$i:*) echo "$i is already in PATH, not adding";;
              *) echo "$i" >> $GITHUB_PATH;;
            esac
          done
          
          case ":$CPATH:" in
            *:/opt/procursus/include:*) echo "/opt/procursus/include already in CPATH, not adding";;
            *) echo "CPATH=$CPATH:/opt/procursus/include" >> $GITHUB_ENV;;
          esac
          
          case ":$LIBRARY_PATH:" in
            *:/opt/procursus/lib:*) echo "/opt/procursus/lib already in LIBRARY_PATH, not adding";;
            *) echo "LIBRARY_PATH=$LIBRARY_PATH:/opt/procursus/lib" >> $GITHUB_ENV;;
          esac

      - name: Create unprivileged user for APT method
        run: |
          # Taken from Procursus' apt.postinst
          set -e
          getHiddenUserUid()
          {
            local __UIDS=$(dscl . -list /Users UniqueID | awk '{print $2}' | sort -ugr)
            local __NewUID
            for __NewUID in $__UIDS
            do
                if [[ $__NewUID -lt 499 ]] ; then
                    break;
                fi
            done
            echo $((__NewUID+1))
          }
          
          if ! id _apt &>/dev/null; then
            # add unprivileged user for the apt methods
            sudo dscl . -create /Users/_apt UserShell /usr/bin/false
            sudo dscl . -create /Users/_apt NSFHomeDirectory /var/empty
            sudo dscl . -create /Users/_apt PrimaryGroupID -1
            sudo dscl . -create /Users/_apt UniqueID $(getHiddenUserUid)
            sudo dscl . -create /Users/_apt RealName "APT Sandbox User"
          else
            echo "APT Sandbox User already exists, not creating"
          fi

      - name: Update bootstrap
        run: |
          sudo apt-get -y update
          sudo apt-get -y --allow-downgrades dist-upgrade || :

      - name: Install necessary packages on macOS
        run: |
          sudo apt-get install -y autoconf automake autopoint bash bison cmake curl docbook-xml \
            docbook-xsl fakeroot findutils flex gawk git gnupg grep groff gzip ldid libtool make \
            ncurses-bin openssl patch pkg-config po4a python3 sed tar triehash xz-utils asciidoc zstd

      - name: Create build dirs
        run: |
          mkdir -vp $GITHUB_WORKSPACE/{'Procursus','binpack','my_repo'}

      - name: Checkout Procursus
        uses: actions/checkout@v3
        with:
          repository: 'lorenzoferron98/Procursus'
          path: 'Procursus'

      - name: Build lsof
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake lsof-package

      - name: Build ldid
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake ldid-package

      - name: Build libplist
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libplist-package

      - name: Build apt
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake apt-package AARCH64_CCASFLAGS=""

      - name: Build base
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake base-package

      - name: Build bash
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake bash-package

      - name: Build bash-completion
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake bash-completion-package

      - name: Build brotli
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake brotli-package

      - name: Build cacerts
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake cacerts-package

      - name: Build chariz-keyring
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake chariz-keyring-package

      - name: Build coreutils
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake coreutils-package

      - name: Build darwintools
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake darwintools-package

      - name: Build dash
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake dash-package

      - name: Build debianutils
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake debianutils-package

      - name: Build diffutils
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake diffutils-package

      - name: Build diskdev-cmds
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake diskdev-cmds-package

      - name: Build dpkg
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake dpkg-package

      - name: Build essential
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake essential-package

      - name: Build file-cmds
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake file-cmds-package

      - name: Build findutils
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake findutils-package

      - name: Build firmware-sbin
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake firmware-sbin-package

      - name: Build gnupg
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake gnupg-package AARCH64_CCASFLAGS=""

      - name: Build grep
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake grep-package

      - name: Build havoc-keyring
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake havoc-keyring-package

      - name: Build launchctl
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake launchctl-package

      - name: Build libassuan
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libassuan-package

      - name: Build libxcrypt
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libxcrypt-package

      - name: Build dimentio
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake dimentio-package

      - name: Build libedit
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libedit-package

      - name: Build libffi
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libffi-package

      - name: Build libgcrypt
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libgcrypt-package

      - name: Build libgmp10
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libgmp10-package

      - name: Build gnutls
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake gnutls-package AARCH64_CCASFLAGS=""

      - name: Build libgpg-error
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libgpg-error-package

      - name: Build neofetch
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake neofetch-package

      - name: Build libidn2
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libidn2-package

      - name: Build gettext
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake gettext-package

      - name: Build dropbear
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake dropbear-package

      - name: Build libiosexec
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libiosexec-package

      - name: Build libkernrw
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libkernrw-package

      - name: Build lz4
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake lz4-package

      - name: Build xz
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake xz-package

      - name: Build libmd
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libmd-package

      - name: Build ncurses
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake ncurses-package

      - name: Build nettle
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake nettle-package

      - name: Build npth
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake npth-package

      - name: Build p11-kit
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake p11-kit-package

      - name: Build openpam
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake openpam-package

      - name: Build readline
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake readline-package

      - name: Build libtasn1
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libtasn1-package

      - name: Build libunistring
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libunistring-package

      - name: Build xxhash
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake xxhash-package

      - name: Build zlib-ng
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake zlib-ng-package

      - name: Build zstd
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake zstd-package

      - name: Build odyssey-keyring
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake odyssey-keyring-package

      - name: Build openssh
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake openssh-package

      - name: Build openssl
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake openssl-package

      - name: Build packix-keyring
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake packix-keyring-package

      - name: Build keyring
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake keyring-package

      - name: Build profile.d
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake profile.d-package

      - name: Build sed
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake sed-package

      - name: Build shell-cmds
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake shell-cmds-package

      - name: Build shshd
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake shshd-package

      - name: Build snaputil
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake snaputil-package

      - name: Build sudo
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake sudo-package

      - name: Build tar
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake tar-package

      - name: Build uikittools
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake uikittools-package

      - name: Build vi
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake vi-package

      - name: Build zsh
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake zsh-package

      - name: Build nano
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake nano-package

      - name: Build jlutil
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake jlutil-package

      - name: Build curl
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake curl-package AARCH64_CCASFLAGS=""

      - name: Build cowsay
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake cowsay-package

      - name: Build file
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake file-package

      - name: Build git
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake git-package

      - name: Build htop
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake htop-package

      - name: Build make
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake make-package

      - name: Build p7zip
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake p7zip-package

      - name: Build gawk
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake gawk-package

      - name: Build gettext-localizations
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake gettext-localizations-package

      - name: Build gzip
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake gzip-package

      - name: Build mpfr4
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake mpfr4-package

      - name: Build pam-modules
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake pam-modules-package

      - name: Build pcre
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake pcre-package

      - name: Build system-cmds
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake system-cmds-package

      - name: Build unzip
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake unzip-package

      - name: Build zip
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake zip-package

      - name: Build unrar
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake unrar-package

      - name: Build nickchan-keyring
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake nickchan-keyring-package

      - name: Build nyuszika7h-keyring
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake nyuszika7h-keyring-package

      - name: Build amy-keyring
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake amy-keyring-package

      - name: Build adv-cmds
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake adv-cmds-package

      - name: Build bzip2
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake bzip2-package

      - name: Build iokittools
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake iokittools-package

      - name: Build less
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake less-package

      - name: Build kext-tools
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake kext-tools-package

      - name: Build libarchive
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libarchive-package

      - name: Build network-cmds
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake network-cmds-package

      - name: Build plutil
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake plutil-package

      - name: Build text-cmds
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake text-cmds-package

      - name: Build vim
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake vim-package

      - name: Build defaults
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake defaults-package

      - name: Build uuid
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake uuid-package

      - name: Build libksba
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libksba-package

      - name: Build libtommath
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libtommath-package

      - name: Build libtomcrypt
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libtomcrypt-package

      - name: Build rtmpdump
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake rtmpdump-package

      - name: Build libssh2
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake libssh2-package

      - name: Build nghttp2
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake nghttp2-package

      - name: Package bootstrap
        if: ${{ success() || failure() }}
        working-directory: ./Procursus
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} NO_PGP=1 gmake bootstrap

      - name: Checkout binpack
        if: ${{ success() || failure() }}
        uses: actions/checkout@v3
        with:
          repository: 'ProcursusTeam/binpack'
          submodules: 'recursive'
          path: 'binpack'

      - name: Package binpack
        if: ${{ success() || failure() }}
        working-directory: ./binpack
        run: |
          MEMO_TARGET=$MEMO_TARGET MEMO_CFVER=${{ matrix.cfver }} MEMO_NO_IOSEXEC=1 NO_PGP=1 BINPACK_THICK=1 gmake binpack

      - name: Checkout my repo
        if: ${{ success() || failure() }}
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.MY_PAT }}
          path: 'my_repo'

      - name: Config git
        if: ${{ success() || failure() }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '30465144+github-actions[bot]@users.noreply.github.com'

      - name: Commit bootstrap
        if: ${{ success() || failure() }}
        working-directory: ./my_repo
        run: |
          mkdir -vp /tmp/${{ matrix.cfver }}/bootstrap && unzstd -d -vvvv ../Procursus/build_strap/$MEMO_TARGET/${{ matrix.cfver }}/bootstrap.tar.zst -o /tmp/${{ matrix.cfver }}/bootstrap.tar
          tar -xvf /tmp/${{ matrix.cfver }}/bootstrap.tar -C /tmp/${{ matrix.cfver }}/bootstrap
          cp -v ./repos/anfora-repo.gpg /tmp/${{ matrix.cfver }}/bootstrap/private/etc/apt/trusted.gpg.d/
          tar -cvf ./repos/${{ matrix.cfver }}/bootstrap.tar -C /tmp/${{ matrix.cfver }}/bootstrap/ .
          git add .
          git commit -m "Upload bootstrap"

      - name: Commit binpack
        if: ${{ success() || failure() }}
        working-directory: ./my_repo
        run: |
          mv -v ../binpack/build_strap/$MEMO_TARGET/${{ matrix.cfver }}/binpack-thick.tar ./repos/${{ matrix.cfver }}/
          mv -v ../binpack/build_strap/$MEMO_TARGET/${{ matrix.cfver }}/binpack-thick.tc ./repos/${{ matrix.cfver }}/
          git add .
          git commit -m "Upload binpack"

      - name: Commit packages
        if: ${{ success() || failure() }}
        working-directory: ./my_repo
        run: |
          rm -vrf ../Procursus/build_dist/$MEMO_TARGET/${{ matrix.cfver }}/work/
          rsync --progress -r -u -v ../Procursus/build_dist/$MEMO_TARGET/${{ matrix.cfver }}/* ./repos/${{ matrix.cfver }}/debs/
          git add .
          git commit -m "Upload packages"

      - name: Push bootstrap, binpack and packages
        if: ${{ success() || failure() }}
        working-directory: ./my_repo
        run: |
          git push
